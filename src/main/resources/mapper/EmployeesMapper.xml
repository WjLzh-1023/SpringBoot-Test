<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.dao.EmployeesMapper">
    <cache></cache>
    <resultMap id="BaseResultMap" type="com.model.Employees">
        <id column="empid" property="empid" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="roleid" property="roleid" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="add" parameterType="com.model.Employees">
    insert into employees (username, password,tel, name, email, roleid) values (#{username}, #{password},#{tel}, #{name}, #{email}, #{roleid})
    </insert>

    <delete id="del" parameterType="com.model.Employees">
        delete from employees where empid = #{empid}
    </delete>

    <select id="getByUserName" resultType="com.model.Employees" parameterType="java.lang.String">
        SELECT e.*,r.rolelnfo FROM employees e,role r WHERE e.roleid=r.roleid AND e.username=#{username}
    </select>

    <select id="list" resultType="com.model.Employees">
      SELECT e.*,r.rolelnfo FROM employees e,role r WHERE e.roleid=r.roleid
   </select>

    <select id="listByRoleid" resultType="com.model.Employees">
      SELECT e.*,r.rolelnfo FROM employees e,role r WHERE e.roleid=r.roleid And e.roleid=3
   </select>


    <update id="update" parameterType="com.model.Employees">
        update employees set username = #{username,jdbcType=VARCHAR},password = #{password,jdbcType=VARCHAR},tel = #{tel,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},email = #{email,jdbcType=VARCHAR},roleid = #{roleid,jdbcType=INTEGER} where empid = #{empid,jdbcType=INTEGER}
    </update>

    <select id="selbynotmyself" parameterType="int" resultType="com.model.Employees">
        SELECT * FROM employees where empid NOT IN (#{empid})
    </select>
    <update id="editpassword">
    UPDATE employees SET `password`='123456'
</update>
    <update id="editpasswordByempid" parameterType="com.model.Employees">
    UPDATE employees SET password=#{password} where empid = #{empid}
</update>

</mapper>